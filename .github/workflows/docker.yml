name: docker

on:
  push:
    branches: [ main ]

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: docker/
          file: docker/Dockerfile
          tags: |
            ${{ secrets.DOCKER_USER }}/homeworklinux:build-${{ github.sha }}
            ${{ secrets.DOCKER_USER }}/homeworklinux:latest
          cache-from: type=gha  # Используем кеш GitHub
          cache-to: type=gha,mode=max

      - name: Save image as artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: /tmp/docker-image.tar

  test:
    runs-on: ubuntu-latest
    needs: verify
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s
    steps:
      - name: Download image artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image
          path: /tmp

      - name: Load Docker image
        run: docker load -i /tmp/docker-image.tar

      - name: Run tests
        run: |
          docker run --network host \
            -e TESTING=1 \
            ${{ secrets.DOCKER_USER }}/homeworklinux:build-${{ github.sha }} pytest -v ./tests/

  deploy:
    runs-on: self-hosted
    needs: [ test ]
    steps:
      - name: Download image artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image
          path: /tmp

      - name: Load Docker image
        run: docker load -i /tmp/docker-image.tar

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ~/tasks/docker
            ls -la restart.sh
            chmod +x restart.sh
            ./restart.sh

